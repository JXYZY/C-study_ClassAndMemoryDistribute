// ClassDistributeMemory.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include "StringBad.h"

int main()
{
	StringBad st1("12345");
	StringBad st2 = st1; //进入自定义的深拷贝构造函数
	StringBad st3,st4;
	//这里是重中之重+++++++++++++++++++++++++++++++++++++++
	st3 = st1; //测试过这边不会走到自定义的拷贝构造函数，这里是赋值，由于成员变量还有指针，需要和深拷贝构造一样，进行重载，重载和拷贝构造一样都是赋值
	st4 = "123";//这边会先走构造函数，转换函数为构造函数，构造一个临时对象，然后再将临时对象赋值给st4,所以对象如果有指针，这里还是要重写赋值进行深拷贝。
    std::cout << "Hello World!\n";
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
